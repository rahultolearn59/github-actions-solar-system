name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: 'superuser'
  MONGO_PASSWORD: "${{ secrets.MONGO_PASSWORD }}"
  TEST: 'test'
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container:
          image: 'node:20'
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

      #  - name: Setup NodeJS Version
      #    uses: actions/setup-node@v3
      #    with:
      #      node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: npm_testing
          run: npm test
          
        - name: Archive Test Result
          if: success() || failure()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 20
    
      - name: Install Dependencies
        run: npm install
    
      - name: Code-coverage
        continue-on-error: true
        run: npm run code-coverage

      - name: Code-Coverage-Result
        #if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
      name: Docker
      permissions:
        packages: write
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
          
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'

          
    dev-deploy:
      name: Dev Deployment
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install KUBECTL
        uses: azure/setup-kubectl
        with:
          version: 'v1.26.0'

      - name: Setup KUBECTL Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBECONFIG }}'
        
      - name: Verify KubeCTL command
        run: kubectl version --short -o yaml